====== PART 1: Performance and comparison of indivudual input values ======
======================== across factorial functions ======================= 

$`0`
Unit: nanoseconds
               expr  min   lq mean median   uq   max neval
 factorial_code1(.)  700  700  933    800  800 16500   100
 factorial_code2(.) 5300 5400 5754   5400 5550 28500   100
 factorial_code3(.)  700  700  796    800  800  2200   100
 factorial_code4(.)  600  700  770    700  800  3400   100

$`1`
Unit: nanoseconds
               expr   min    lq  mean median    uq   max neval
 factorial_code1(.)   700   800   884    800   900  2800   100
 factorial_code2(.) 12000 12250 12638  12300 12500 37300   100
 factorial_code3(.)   700   800   868    850   900  2300   100
 factorial_code4(.)  1500  1700  2213   1800  1900 37700   100

$`6`
Unit: nanoseconds
               expr   min    lq  mean median    uq   max neval
 factorial_code1(.)   900  1100  1339   1300  1400  5800   100
 factorial_code2(.) 23200 23700 26353  24200 28100 50700   100
 factorial_code3(.)  8100  8450  9833   9300 10400 38100   100
 factorial_code4(.)   800  1100  1566   1200  1350 30900   100

$`11`
Unit: nanoseconds
               expr   min    lq  mean median    uq   max neval
 factorial_code1(.)  1000  1100  1421   1400  1500  5400   100
 factorial_code2(.) 38300 38700 39805  39000 39300 73100   100
 factorial_code3(.) 10100 10500 12102  11100 11500 57600   100
 factorial_code4(.)   800   900  1297   1200  1300 13000   100

$`13`
Unit: nanoseconds
               expr   min    lq  mean median    uq    max neval
 factorial_code1(.)  1100  1300  1952   1700  2000   9500   100
 factorial_code2(.) 43400 45000 50888  46200 53250 222300   100
 factorial_code3(.) 64800 68500 80114  70300 75200 308000   100
 factorial_code4(.)   800  1100  1608   1500  1800   9900   100

$`45`
Unit: nanoseconds
               expr    min     lq   mean median     uq    max neval
 factorial_code1(.)   1700   2250   2932   2700   3050  16800   100
 factorial_code2(.) 126500 144800 163123 153300 177700 356100   100
 factorial_code3(.)  73000  82850  97594  91750  99100 207600   100
 factorial_code4(.)    700   1150   2161   1600   2000  42700   100

$`63`
Unit: nanoseconds
               expr    min     lq   mean median     uq    max neval
 factorial_code1(.)   2400   2900   4869   3650   6200  15200   100
 factorial_code2(.) 201000 226700 309114 242300 443600 619700   100
 factorial_code3(.)  91700 102000 162917 106500 186600 835900   100
 factorial_code4(.)    700   1200   3002   1850   2500  53900   100

====== PART 2: compare performance of ranges and timing of input values =======
======================== after applying defferent factorial functions ======================= 

$`range 1:10`
Unit: microseconds
                       expr   min     lq    mean median     uq   max neval
 lapply(x, factorial_code1)  16.9  17.45  20.489  18.10  19.70  67.0   100
 lapply(x, factorial_code2) 262.7 265.85 305.046 278.05 321.45 878.2   100
 lapply(x, factorial_code3)  89.5  93.60 111.419  97.20 111.15 308.6   100
 lapply(x, factorial_code4)  16.6  18.00  23.669  19.10  21.45 267.9   100

$`range 1:50`
Unit: microseconds
                       expr    min      lq     mean median      uq     max neval
 lapply(x, factorial_code1) 1990.5 2460.15 3639.431 3499.8 4515.75  8971.7   100
 lapply(x, factorial_code2) 4190.7 5097.60 7307.492 6990.1 9044.70 18817.2   100
 lapply(x, factorial_code3) 2715.9 3609.05 5206.956 4817.9 6379.00 12074.1   100
 lapply(x, factorial_code4)   56.7   75.05  107.067  110.6  131.85   232.6   100

$`range 1:100`
Unit: microseconds
                       expr     min       lq      mean   median       uq     max neval
 lapply(x, factorial_code1)  4864.5  6934.45 10070.467 10596.60 11767.75 20891.6   100
 lapply(x, factorial_code2) 15195.0 21600.55 31393.505 34384.05 39025.90 55792.6   100
 lapply(x, factorial_code3)  7585.9 11760.90 16164.612 16656.35 18119.70 57619.2   100
 lapply(x, factorial_code4)   119.0   154.65   226.147   233.10   253.75   944.2   100

